/==========\
|Problem 31|
\==========/

In the United Kingdom the currency is made up of pound (£) and pence (p). There are eight coins in general circulation:

1p, 2p, 5p, 10p, 20p, 50p, £1 (100p), and £2 (200p).
It is possible to make £2 in the following way:

1×£1 + 1×50p + 2×20p + 1×5p + 1×2p + 3×1p
How many different ways can £2 be made using any number of coins?

/===========\
|Explanation|
\===========/

This problem can be solved by adding coins of progressively smaller denomination to a total.
Every time you are to add a coin, you fork a tree into two branches, one where you include the coin, and one where you do not.

Every time you add to the total, check to see if you are at 200. If you are, end the branch and increment the counter.
Elsewise, if you are over 200, do not increment the counter, but end the branch.

My solution is recursive, with each subsequent fork in a branch being handled by a new method call.

There is a base case for when we are only adding 1p coins, and for when we reach 199 total pence with 2p coins.

The total number of combinations is 73682.