/==========\
|Problem 29|
\==========/

Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

/===========\
|Explanation|
\===========/

Initially, I attempted to write a solution for this problem that tracks numbers and squares and subtracts from the total solution set.
However, there is a theoretical snafu that occurs when dealing with numbers that are squares of squares of squares. (or any larger factor).
As I want the code to be applicable to a problem set of any size, and this workaround would be extremely tedious, I have
decided to forego this solution in favor of using a sorted set.

Ths tree set is an existing data structure in the Java API (which implements SortedSet) that uses iterators to keep all added values in a sorted order.
Sorting will be done in O(n log n) and search will be done in a trivial O(log n).

However, the set will contain BigIntegers, as the values of these base-exponent pairs get very large.

The number of distinct values is 9183.